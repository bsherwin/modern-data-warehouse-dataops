{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mdwdops-adf-dev-brian5"
		},
		"P_Ingest_ParkingData_properties_0_typeProperties_notebookPath": {
			"type": "string",
			"defaultValue": "/releases/dev/02_standardize"
		},
		"P_Ingest_ParkingData_properties_4_typeProperties_notebookPath": {
			"type": "string",
			"defaultValue": "/releases/dev/03_transform"
		},
		"Ds_AdlsGen2_ParkingData_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().infilename"
		},
		"Ds_AdlsGen2_ParkingData_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat(dataset().container, '/', dataset().infilefolder)"
		},
		"Ls_AdlsGen2_01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mdwdopsstdevbrian5.dfs.core.windows.net"
		},
		"Ls_AzureDatabricks_01_properties_typeProperties_domain": {
			"type": "string",
			"defaultValue": "https://adb-3881911134715693.13.azuredatabricks.net"
		},
		"Ls_AzureSQLDW_01_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sqldwConnectionString"
		},
		"Ls_Http_DataSimulator_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mdwdops-api-dev-brian5.azurewebsites.net"
		},
		"Ls_KeyVault_01_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mdwdops-kv-dev-brian5.vault.azure.net/"
		},
		"Ls_Rest_ParkSensors_01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://<apiBaseUrl>"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/P_Ingest_ParkingData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline to Ingest Simulated Parking Data",
				"activities": [
					{
						"name": "StandardizeData",
						"description": "",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "DownloadSensorData",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DownloadLocationData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "[parameters('P_Ingest_ParkingData_properties_0_typeProperties_notebookPath')]",
							"baseParameters": {
								"infilefolder": {
									"value": "@variables('infilefolder')",
									"type": "Expression"
								},
								"loadid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"libraries": [
								{
									"pypi": {
										"package": "applicationinsights"
									}
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "Ls_AzureDatabricks_01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set infilefolder",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "infilefolder",
							"value": {
								"value": "@utcnow('yyyy_MM_dd_hh_mm_ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DownloadSensorData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set infilefolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureBlobFSSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Ds_Http_Parking_Sensors",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Ds_AdlsGen2_ParkingData",
								"type": "DatasetReference",
								"parameters": {
									"infilefolder": {
										"value": "@variables('infilefolder')",
										"type": "Expression"
									},
									"infilename": "ParkingSensorData.json",
									"container": "datalake/data/lnd"
								}
							}
						]
					},
					{
						"name": "DownloadLocationData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set infilefolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureBlobFSSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Ds_Http_Parking_Locations",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Ds_AdlsGen2_ParkingData",
								"type": "DatasetReference",
								"parameters": {
									"infilefolder": {
										"value": "@variables('infilefolder')",
										"type": "Expression"
									},
									"infilename": "ParkingLocationData.json",
									"container": "datalake/data/lnd"
								}
							}
						]
					},
					{
						"name": "TransformData",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "StandardizeData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "[parameters('P_Ingest_ParkingData_properties_4_typeProperties_notebookPath')]",
							"baseParameters": {
								"loadid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"libraries": [
								{
									"pypi": {
										"package": "applicationinsights"
									}
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "Ls_AzureDatabricks_01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Load SQLDW",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TransformData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[load_dw]",
							"storedProcedureParameters": {
								"load_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Ls_AzureSQLDW_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"infilefolder": {
						"type": "String",
						"defaultValue": "lnd"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-14T14:59:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_AzureDatabricks_01')]",
				"[concat(variables('factoryId'), '/datasets/Ds_Http_Parking_Sensors')]",
				"[concat(variables('factoryId'), '/datasets/Ds_AdlsGen2_ParkingData')]",
				"[concat(variables('factoryId'), '/datasets/Ds_Http_Parking_Locations')]",
				"[concat(variables('factoryId'), '/linkedServices/Ls_AzureSQLDW_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_AdlsGen2_ParkingData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_AdlsGen2_01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"infilefolder": {
						"type": "String"
					},
					"infilename": {
						"type": "String"
					},
					"container": {
						"type": "String",
						"defaultValue": "datalake/data/lnd"
					}
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "arrayOfObjects"
					},
					"fileName": {
						"value": "[parameters('Ds_AdlsGen2_ParkingData_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('Ds_AdlsGen2_ParkingData_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_AdlsGen2_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Http_Parking_Locations')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_Http_DataSimulator",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "/locations",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_Http_DataSimulator')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Http_Parking_Sensors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_Http_DataSimulator",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/sensors"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_Http_DataSimulator')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_REST_ParkingData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_Rest_ParkSensors_01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeurl": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relativeurl",
						"type": "Expression"
					},
					"requestMethod": "GET"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_Rest_ParkSensors_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_AdlsGen2_01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Ls_AdlsGen2_01_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_AzureDatabricks_01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "[parameters('Ls_AzureDatabricks_01_properties_typeProperties_domain')]",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Ls_KeyVault_01",
							"type": "LinkedServiceReference"
						},
						"secretName": "databricksToken"
					},
					"existingClusterId": "0214-145321-p05jzgdy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_KeyVault_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_AzureSQLDW_01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Ls_KeyVault_01",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Ls_AzureSQLDW_01_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_KeyVault_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_Http_DataSimulator')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Ls_Http_DataSimulator_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_KeyVault_01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Ls_KeyVault_01_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_Rest_ParkSensors_01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Ls_Rest_ParkSensors_01_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_Sched')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "P_Ingest_ParkingData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2019-02-01T05:28:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/P_Ingest_ParkingData')]"
			]
		}
	]
}